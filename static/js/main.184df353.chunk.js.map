{"version":3,"sources":["styles/images/preloader.gif","modules/Table.js","styles/images/logo.svg","modules/Sidebar.js","modules/BarChart.js","modules/ScatterPlot.js","App.js","reportWebVitals.js","index.js"],"names":["columns","id","label","align","minWidth","subId","format","value","toLocaleString","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","color","body","fontSize","StickyHeadTable","props","React","page","setPage","rowsPerPage","setRowsPerPage","rows","data","Paper","sx","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","style","fontWeight","TableBody","slice","row","hover","role","tabIndex","_","isNull","code","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","Sidebar","isSidebarCollapsed","setIsSidebarCollapsed","className","onClick","height","src","logo","alt","BarChart","x","y","widthOfChartContainer","document","documentElement","clientWidth","mode","marker","name","type","layout","title","showlegend","responsive","ScatterPlot","size","App","useState","minPopulationLimit","setMinPopulationLimit","minVatRate","setMinVatRate","console","log","barChartData","scatterPlotData","minVatRateValue","Q1","gql","useQuery","loading","error","message","countries","Typography","gutterBottom","Box","Slider","min","max","onChange","e","newValue","valueLabelDisplay","marks","getAriaValueText","TextField","preloader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.184df353.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/preloader.b31b723c.gif\";","import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { styled } from '@mui/material/styles';\nimport _ from 'lodash'\n\nconst columns = [\n  { id: 'name', label: 'Name', align: 'center', minWidth: 170 },\n  { id: 'capital', subId: 'name', label: 'Capital', align: 'center', minWidth: 170},\n  { id: 'id', label: 'Country Id', align: 'center', minWidth: 170 },\n  { id: 'alpha3Code', label: 'Country Code', align: 'center', minWidth: 100 },\n  { id: 'vatRate', label: 'Vat Rate', align: 'center', minWidth: 100 },\n  {id: 'population', label: 'Population', minWidth: 170, align: 'center', format: (value) => value.toLocaleString('en-US')}\n]\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"#0688f7\",\n    color: \"#FFF\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nexport default function StickyHeadTable(props) {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const { data: rows } = props\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <StyledTableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth, fontWeight: 600 }}\n                >\n                  {column.label}\n                </StyledTableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      let value = row[column.id];\n                      if (column.subId && value) {\n                        value = value[column.subId]\n                      }\n\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : _.isNull(value) ? '-': value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}","export default __webpack_public_path__ + \"static/media/logo.43bcee8a.svg\";","import * as React from 'react';\nimport logo from '../styles/images/logo.svg'\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport LocationCityIcon from '@mui/icons-material/LocationCity';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport SurroundSoundIcon from '@mui/icons-material/SurroundSound';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport default function Sidebar(props) {\n  const {isSidebarCollapsed, setIsSidebarCollapsed} = props\n\n  return (\n      <div>\n        <div className='sidebar-option collapse-sidebar' onClick={() => {setIsSidebarCollapsed(!isSidebarCollapsed)}}>\n          <span><MenuIcon /></span>\n        </div>\n\n        <div className='logo-container' style={{width: isSidebarCollapsed ? '115px': '100%', height: isSidebarCollapsed ? '80px': '120px'}} >\n          <img src={logo}  alt=\"logo\" width=\"100%\"/>\n        </div>\n\n        <div className='options-container'>\n          <div className='sidebar-option'>\n              <div className=\"sidebar-icon\">\n                <DashboardIcon />\n              </div>\n              Dashboard\n            </div>\n          <div className='sidebar-option'>\n              <div className=\"sidebar-icon\">\n                <AssessmentIcon />\n              </div>\n              Reports\n            </div>\n          <div className='sidebar-option'>\n              <div className=\"sidebar-icon\">\n                <AdminPanelSettingsIcon />\n              </div>\n              Admin Panel\n            </div>\n          <div className='sidebar-option'>\n              <div className=\"sidebar-icon\">\n                <UpdateIcon />\n              </div>\n              Weekly Updates\n            </div>\n          <div className='sidebar-option'>\n              <div className=\"sidebar-icon\">\n                <LocationCityIcon />\n              </div>\n              Organisation\n            </div>\n          <div className='sidebar-option'>\n              <div className=\"sidebar-icon\">\n                <SettingsIcon />\n              </div>\n              Settings\n            </div>\n          <div className='sidebar-option'>\n              <div className=\"sidebar-icon\">\n                <SurroundSoundIcon />\n              </div>\n              Announcements\n            </div>\n        </div>\n      </div>\n  )\n}","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nexport function BarChart (props) {\n  const {data: {x, y}, isSidebarCollapsed} = props\n\n  const widthOfChartWrapper = document.documentElement.clientWidth * 0.85\n\n  let widthOfChartContainer = (widthOfChartWrapper - (20*2) - 10)/2\n  widthOfChartContainer += isSidebarCollapsed ? document.documentElement.clientWidth*0.05 : -document.documentElement.clientWidth*0.05\n\n    return (\n      <Plot\n        data={[\n          {x, y, mode: 'lines+markers', marker: {color: 'orange'}, name: 'Line'},\n          {x, y, marker: {color: '#0688f7'}, type: 'bar', name: 'Bar'},\n        ]}\n        layout={ {height: 350, width: widthOfChartContainer, title: 'Population Graph', showlegend: false, responsive: true} }\n      />\n    );\n}\n","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nexport function ScatterPlot (props) {\n  const {data: {y}, isSidebarCollapsed} = props\n\n  const widthOfChartWrapper = document.documentElement.clientWidth * 0.80\n  let widthOfChartContainer = (widthOfChartWrapper - (20*2) - 10)/2\n  widthOfChartContainer += isSidebarCollapsed ? document.documentElement.clientWidth*0.05 : -document.documentElement.clientWidth*0.05\n\n    return (\n      <Plot\n        data={[\n          {\n            y,\n            mode: 'markers',\n            marker: {\n              size: 15,\n              color: [ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]\n            }\n          }\n        ]}\n        layout={ {height: 350, width: widthOfChartContainer, title: 'Population Graph', showlegend: false, responsive: true} }\n      />\n    );\n}\n","import { useState } from 'react';\nimport preloader from './styles/images/preloader.gif'\nimport './App.css';\nimport './styles/App.scss'\n\nimport {useQuery, gql} from \"@apollo/client\"\nimport MTable from './modules/Table';\nimport Sidebar from './modules/Sidebar';\nimport { BarChart } from './modules/BarChart';\nimport { ScatterPlot } from './modules/ScatterPlot';\nimport Paper from '@mui/material/Paper';\nimport Slider from '@mui/material/Slider';\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nimport _ from 'lodash';\n\nfunction App() {\n  const [minPopulationLimit, setMinPopulationLimit] = useState(0)\n  const [minVatRate, setMinVatRate] = useState(0)\n  console.log(\"minVatRate\", minVatRate);\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false)\n\n  const minVatRateValue = minVatRate || 0\n\n  const Q1 = gql`\n    {\n      countries(limit: 25, where: {population: {gt: ${minPopulationLimit}}, vatRate: {gt: ${minVatRateValue}}}) {\n        name\n        population\n        vatRate\n        alpha3Code\n        id\n        capital {\n          name\n        }\n      }\n    }\n  `\n\n  const { data, loading, error } = useQuery(Q1)\n  if (error) return <pre>{error.message}</pre>\n\n  let barChartData\n  let scatterPlotData\n\n  if (!loading) {\n    barChartData = {\n      x: _.map(data.countries, 'name'),\n      y: _.map(data.countries, 'population')\n    }\n  \n    scatterPlotData = {\n      y: _.map(data.countries, 'population')\n    }\n  }\n\n  const marks = [\n    {\n      value: 0,\n      label: '0',\n    },\n    {\n      value: 100000000,\n      label: '100000000',\n    },\n    {\n      value: 250000000,\n      label: '250000000',\n    },\n    {\n      value: 500000000,\n      label: '500000000',\n    },\n  ];\n\n  function valuetext(value) {\n    return value;\n  }\n\n  return (\n    <div className=\"app\">\n      <div className={`sidebar ${isSidebarCollapsed ? 'collapsed': ''}`}>\n        <Sidebar isSidebarCollapsed={isSidebarCollapsed} setIsSidebarCollapsed={setIsSidebarCollapsed}/>\n      </div>\n\n      <div className={`app-content ${isSidebarCollapsed ? 'sidebar-collapsed': ''}`}>\n        <h1>Welcome to Countries App</h1>\n\n        <Paper className='filters-wrapper'>\n          <div><h3>Filters</h3></div>\n          <hr />\n          <div>\n            <div>\n              <Typography id=\"non-linear-slider\" gutterBottom>\n                Min Population: {minPopulationLimit}\n              </Typography>\n            </div>\n            <Box sx={{ width: 500 }}>\n              <Slider\n                  value={minPopulationLimit}\n                  aria-label=\"Custom marks\"\n                  id=\"population-slider\"\n                  min={100000}\n                  max={500000000}\n                  onChange={(e, newValue) => setMinPopulationLimit(newValue)}\n                  valueLabelDisplay=\"auto\"\n                  marks={marks}\n                  getAriaValueText={valuetext}\n                />\n            </Box>\n\n            <div>\n\n            <br />\n            <br />\n            <TextField\n              id=\"vat-rate-input\"\n              label=\"Min Vat Rate\"\n              type=\"number\"\n              onChange={(e) => {\n                setMinVatRate(e.target.value)\n              }}\n              value={minVatRate}\n            />\n            </div>\n          </div>\n        </Paper>\n\n\n        {loading &&\n          <div className=\"preloader-wrapper\">\n            <img width={50} src={preloader} alt=\"Loading\" />\n          </div>\n        }\n        {!loading &&\n          <div id='result-section'>\n            <Paper className=\"chart-wrapper\">\n              <div>\n                <BarChart data={{...barChartData}} isSidebarCollapsed={isSidebarCollapsed}/>\n              </div>\n              <div>\n                <ScatterPlot data={{...scatterPlotData}} isSidebarCollapsed={isSidebarCollapsed}/>\n              </div>\n            </Paper>\n\n            <MTable data={data.countries}/>\n          </div>\n        }\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst client = new ApolloClient({\n  uri: \"https://api.everbase.co/graphql?apikey=19ab43a4-25d3-4760-8c62-2f94bb8b1008\",\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}